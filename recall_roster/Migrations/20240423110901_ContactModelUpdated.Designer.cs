// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using recall_roster.Data;

#nullable disable

namespace recall_roster.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240423110901_ContactModelUpdated")]
    partial class ContactModelUpdated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("recall_roster.Models.Contact", b =>
                {
                    b.Property<int>("contactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("contactID"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("contactID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("recall_roster.Models.LoginModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("recall_roster.Models.Recall", b =>
                {
                    b.Property<int>("recallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("recallId"));

                    b.Property<int>("ElementChief")
                        .HasColumnType("int");

                    b.Property<int>("ElementChiefMax")
                        .HasColumnType("int");

                    b.Property<int>("Employees")
                        .HasColumnType("int");

                    b.Property<int>("EmployeesMax")
                        .HasColumnType("int");

                    b.Property<int>("FlightChief")
                        .HasColumnType("int");

                    b.Property<int>("FlightChiefMax")
                        .HasColumnType("int");

                    b.Property<int>("SquadronDirector")
                        .HasColumnType("int");

                    b.Property<int>("SquadronDirectorMax")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int");

                    b.Property<int>("TotalMax")
                        .HasColumnType("int");

                    b.Property<int>("active")
                        .HasColumnType("int");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rosterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("timeEnded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("timeStarted")
                        .HasColumnType("datetime2");

                    b.HasKey("recallId");

                    b.ToTable("Recalls");
                });

            modelBuilder.Entity("recall_roster.Models.Response", b =>
                {
                    b.Property<int>("responseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("responseId"));

                    b.Property<int>("contactId")
                        .HasColumnType("int");

                    b.Property<int>("recallId")
                        .HasColumnType("int");

                    b.Property<DateTime>("responseTime")
                        .HasColumnType("datetime2");

                    b.HasKey("responseId");

                    b.HasIndex("contactId");

                    b.HasIndex("recallId");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("recall_roster.Models.Roster", b =>
                {
                    b.Property<int>("rosterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rosterId"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rosterId");

                    b.ToTable("Rosters");
                });

            modelBuilder.Entity("recall_roster.Models.RosterContact", b =>
                {
                    b.Property<int>("rosterId")
                        .HasColumnType("int");

                    b.Property<int>("contactId")
                        .HasColumnType("int");

                    b.HasKey("rosterId", "contactId");

                    b.HasIndex("contactId");

                    b.ToTable("RosterContact", (string)null);
                });

            modelBuilder.Entity("recall_roster.Models.Response", b =>
                {
                    b.HasOne("recall_roster.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("contactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("recall_roster.Models.Recall", "Recall")
                        .WithMany()
                        .HasForeignKey("recallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Recall");
                });

            modelBuilder.Entity("recall_roster.Models.RosterContact", b =>
                {
                    b.HasOne("recall_roster.Models.Contact", "Contact")
                        .WithMany("RosterContacts")
                        .HasForeignKey("contactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("recall_roster.Models.Roster", "Roster")
                        .WithMany("RosterContacts")
                        .HasForeignKey("rosterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Roster");
                });

            modelBuilder.Entity("recall_roster.Models.Contact", b =>
                {
                    b.Navigation("RosterContacts");
                });

            modelBuilder.Entity("recall_roster.Models.Roster", b =>
                {
                    b.Navigation("RosterContacts");
                });
#pragma warning restore 612, 618
        }
    }
}
